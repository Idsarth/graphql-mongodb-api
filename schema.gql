# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Entity client"""
type Client {
  _id: ID!
  created_at: DateTime!
  identifier: String!
  identifier_payments: [Payment!]!
  name: String!
  phone: String!
}

input ClientInput {
  identifier: String!
  name: String!
  phone: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  addPaymentToClient(id: ID!, variables: PaymentInput!): Client!
  changePaymentStatus(id: ID!, status: payment_status!): Boolean!
  createClient(variables: ClientInput!): Client!
  deleteClient(id: String!): Boolean!
  updateClient(id: String!, variables: ClientInput!): Boolean!
}

"""Entity client"""
type Payment {
  _id: ID!
  amount: Int!
  coin: String!
  created_at: DateTime!
  identifier: String!
  product_name: String!
  status: payment_status!
}

"""payment status"""
enum payment_status {
  CREATE
  PAID
  PENDING
}

type PaymentFilter {
  avg_amount: Float!
  id_client: String!
  name_client: String!
  total_amount: Float!
  total_pay: Float!
}

input PaymentInput {
  amount: Float!
  coin: String!
  identifier: String!
  product_name: String!
  status: String!
}

type Query {
  allClient: [Client!]!
  allPayment: [Payment!]!
  clientWithRegisteredPayment(status: payment_status!): [PaymentFilter!]!
}
